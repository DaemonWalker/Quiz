@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IExamLogic examLogic

@if (Exams != null && Exams.Count > 0)
{
    <table>
        <thead>
            <tr>
                <th>序号</th>
                <th>名称</th>
                <th>描述</th>
                <th>最高分数</th>
                <th>是否通过</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Exams.Count; i++)
            {
                <tr>
                    <td>
                        @i
                    </td>
                    <td>
                        <a>@Exams[i].Name</a>
                    </td>
                    <td>
                        @Exams[i].Description
                    </td>
                    <td>
                        @Exams[i].HighestScore
                    </td>
                    <td>
                        @(Exams[i].IsPassed ? "是" : "否")
                    </td>
                </tr>
            }
        </tbody>
    </table>

}

@code {
    private List<ExamModel> Exams { get; set; }
    override async protected Task OnAfterRenderAsync(bool firstRender)
    {
        var user = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User;
        var userID = int.Parse(user.Claims.First(p => p.Type == "ID").Value);
        Exams = await examLogic.GetExamsByUserID(userID);
    }
}
